version: '3.8'

services:
  # 反向代理服务
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - app-network
    depends_on:
      - nodejs
      - minio

  # Node.js 应用服务
  nodejs:
    build: ./baoleme-backend # 项目 Dockerfile 路径
    container_name: node_app
    restart: unless-stopped
    ports:
      - "3000:3000" # 根据实际应用端口修改
      - "9229:9229" # debug port
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres_user:postgres_password%54088@postgres:5432/postgres_db
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin%54088
      - MINIO_BUCKET_NAME=rg2025
    depends_on: # 定义服务自动启动依赖关系
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks: # docker 内容器间通讯网络
      - app-network
    # nodejs 服务配置添加
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # MinIO 对象存储服务
  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # API 端口
      - "9001:9001" # 控制台端口
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin%54088
    volumes:
      - ./minio/data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL 数据库服务
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres_user
      - POSTGRES_PASSWORD=postgres_password%54088
      - POSTGRES_DB=postgres_db
    volumes: # 同样进行映射
      - ./postgres/data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # 初始化postgres脚本（可选）有ORM应该不需要了
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d postgres_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

# volumes:
  # postgres-data: # Docker 自动管理的命名卷，默认存放在主机的 /var/lib/docker/volumes/目录之下
  # minio-data:

networks:
  app-network:
    driver: bridge